/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface BrandFontDto
 */
export interface BrandFontDto {
    /**
     * 
     * @type {string}
     * @memberof BrandFontDto
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof BrandFontDto
     */
    name?: string;
    /**
     * 
     * @type {number}
     * @memberof BrandFontDto
     */
    size?: number;
    /**
     * 
     * @type {boolean}
     * @memberof BrandFontDto
     */
    bold?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof BrandFontDto
     */
    italic?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof BrandFontDto
     */
    underline?: boolean;
    /**
     * 
     * @type {string}
     * @memberof BrandFontDto
     */
    brandId?: string;
    /**
     * 
     * @type {number}
     * @memberof BrandFontDto
     */
    textType?: number;
    /**
     * 
     * @type {string}
     * @memberof BrandFontDto
     */
    fontName?: string;
}

/**
 * Check if a given object implements the BrandFontDto interface.
 */
export function instanceOfBrandFontDto(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BrandFontDtoFromJSON(json: any): BrandFontDto {
    return BrandFontDtoFromJSONTyped(json, false);
}

export function BrandFontDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): BrandFontDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'size': !exists(json, 'size') ? undefined : json['size'],
        'bold': !exists(json, 'bold') ? undefined : json['bold'],
        'italic': !exists(json, 'italic') ? undefined : json['italic'],
        'underline': !exists(json, 'underline') ? undefined : json['underline'],
        'brandId': !exists(json, 'brandId') ? undefined : json['brandId'],
        'textType': !exists(json, 'textType') ? undefined : json['textType'],
        'fontName': !exists(json, 'fontName') ? undefined : json['fontName'],
    };
}

export function BrandFontDtoToJSON(value?: BrandFontDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'size': value.size,
        'bold': value.bold,
        'italic': value.italic,
        'underline': value.underline,
        'brandId': value.brandId,
        'textType': value.textType,
        'fontName': value.fontName,
    };
}

