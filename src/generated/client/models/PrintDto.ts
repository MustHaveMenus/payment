/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PrintProductDto } from './PrintProductDto';
import {
    PrintProductDtoFromJSON,
    PrintProductDtoFromJSONTyped,
    PrintProductDtoToJSON,
} from './PrintProductDto';

/**
 * 
 * @export
 * @interface PrintDto
 */
export interface PrintDto {
    /**
     * 
     * @type {number}
     * @memberof PrintDto
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof PrintDto
     */
    menuId?: string;
    /**
     * 
     * @type {Date}
     * @memberof PrintDto
     */
    finishedDate?: Date;
    /**
     * 
     * @type {number}
     * @memberof PrintDto
     */
    total?: number;
    /**
     * 
     * @type {Array<PrintProductDto>}
     * @memberof PrintDto
     */
    items?: Array<PrintProductDto>;
    /**
     * 
     * @type {number}
     * @memberof PrintDto
     */
    itemCount?: number;
    /**
     * 
     * @type {string}
     * @memberof PrintDto
     */
    location?: string;
    /**
     * 
     * @type {number}
     * @memberof PrintDto
     */
    status?: number;
    /**
     * 
     * @type {boolean}
     * @memberof PrintDto
     */
    available?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PrintDto
     */
    test?: boolean;
}

/**
 * Check if a given object implements the PrintDto interface.
 */
export function instanceOfPrintDto(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PrintDtoFromJSON(json: any): PrintDto {
    return PrintDtoFromJSONTyped(json, false);
}

export function PrintDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): PrintDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'menuId': !exists(json, 'menuId') ? undefined : json['menuId'],
        'finishedDate': !exists(json, 'finishedDate') ? undefined : (new Date(json['finishedDate'])),
        'total': !exists(json, 'total') ? undefined : json['total'],
        'items': !exists(json, 'items') ? undefined : ((json['items'] as Array<any>).map(PrintProductDtoFromJSON)),
        'itemCount': !exists(json, 'itemCount') ? undefined : json['itemCount'],
        'location': !exists(json, 'location') ? undefined : json['location'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'available': !exists(json, 'available') ? undefined : json['available'],
        'test': !exists(json, 'test') ? undefined : json['test'],
    };
}

export function PrintDtoToJSON(value?: PrintDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'menuId': value.menuId,
        'finishedDate': value.finishedDate === undefined ? undefined : (value.finishedDate.toISOString()),
        'total': value.total,
        'items': value.items === undefined ? undefined : ((value.items as Array<any>).map(PrintProductDtoToJSON)),
        'itemCount': value.itemCount,
        'location': value.location,
        'status': value.status,
        'available': value.available,
        'test': value.test,
    };
}

