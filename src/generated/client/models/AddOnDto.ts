/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AddOnDto
 */
export interface AddOnDto {
    /**
     * 
     * @type {string}
     * @memberof AddOnDto
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof AddOnDto
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof AddOnDto
     */
    code?: string;
    /**
     * 
     * @type {number}
     * @memberof AddOnDto
     */
    total?: number;
    /**
     * 
     * @type {number}
     * @memberof AddOnDto
     */
    quantity?: number;
    /**
     * 
     * @type {string}
     * @memberof AddOnDto
     */
    type?: AddOnDtoTypeEnum;
}


/**
 * @export
 */
export const AddOnDtoTypeEnum = {
    User: 'USER',
    Location: 'LOCATION',
    None: 'NONE'
} as const;
export type AddOnDtoTypeEnum = typeof AddOnDtoTypeEnum[keyof typeof AddOnDtoTypeEnum];


/**
 * Check if a given object implements the AddOnDto interface.
 */
export function instanceOfAddOnDto(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AddOnDtoFromJSON(json: any): AddOnDto {
    return AddOnDtoFromJSONTyped(json, false);
}

export function AddOnDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddOnDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'code': !exists(json, 'code') ? undefined : json['code'],
        'total': !exists(json, 'total') ? undefined : json['total'],
        'quantity': !exists(json, 'quantity') ? undefined : json['quantity'],
        'type': !exists(json, 'type') ? undefined : json['type'],
    };
}

export function AddOnDtoToJSON(value?: AddOnDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'code': value.code,
        'total': value.total,
        'quantity': value.quantity,
        'type': value.type,
    };
}

