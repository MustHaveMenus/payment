/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface BrandLogoDto
 */
export interface BrandLogoDto {
    /**
     * 
     * @type {string}
     * @memberof BrandLogoDto
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof BrandLogoDto
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof BrandLogoDto
     */
    path?: string;
    /**
     * 
     * @type {string}
     * @memberof BrandLogoDto
     */
    brandId?: string;
    /**
     * 
     * @type {boolean}
     * @memberof BrandLogoDto
     */
    removed?: boolean;
}

/**
 * Check if a given object implements the BrandLogoDto interface.
 */
export function instanceOfBrandLogoDto(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BrandLogoDtoFromJSON(json: any): BrandLogoDto {
    return BrandLogoDtoFromJSONTyped(json, false);
}

export function BrandLogoDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): BrandLogoDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'path': !exists(json, 'path') ? undefined : json['path'],
        'brandId': !exists(json, 'brandId') ? undefined : json['brandId'],
        'removed': !exists(json, 'removed') ? undefined : json['removed'],
    };
}

export function BrandLogoDtoToJSON(value?: BrandLogoDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'path': value.path,
        'brandId': value.brandId,
        'removed': value.removed,
    };
}

